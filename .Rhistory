install.packages('kernsmooth.R')
install.packages("kernsmooth")
install.packages("KernSmooth")
packageDescription("KernSmooth")
library(KernSmooth)
session.info()
sessionInfo()
library.install("devtools")
source("rankall.R")
source('best.R')
setwd("~/Desktop/Coursera Data Science/Programming wth R/rprog_data_ProgAssignment3-data")
source('best.R')
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
rankall("heart attack", 20)
source('best.R')
outcome <- "heart attack"
num <- 20
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
`%notin%` <- Negate(`%in%`)
formout <- tools::toTitleCase(outcome)
corout <- stringr::str_replace(formout," ", ".")
outcome1 <- paste('Hospital.30.Day.Death..Mortality..Rates.from.',corout,sep='')
if (outcome1 %notin% colnames(data)) {stop('invalid outcome')}
data[,outcome1] <- sapply(data[,outcome1], as.numeric)
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
stlist <- unique(data$State)
resdf <- data.frame()
cnam <- c('Hospital','State')
colnames(resdf) <- cnam
outcome <- 'heart attack'
num <- 20
## Read outcome data
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
## Check that state and outcome are valid
`%notin%` <- Negate(`%in%`)
formout <- tools::toTitleCase(outcome)
corout <- stringr::str_replace(formout," ", ".")
outcome1 <- paste('Hospital.30.Day.Death..Mortality..Rates.from.',corout,sep='')
if (outcome1 %notin% colnames(data)) {stop('invalid outcome')}
data[,outcome1] <- sapply(data[,outcome1], as.numeric)
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
stlist <- unique(data$State)
resdf <- data.frame(matrix(ncol=2,nrow=0))
cnam <- c('Hospital','State')
colnames(resdf) <- cnam
resdf
for (i in stlist){
stdata <- data[which(data$State == i),]
sorteddata <- stdata[order(stdata[outcome1],stdata['Hospital.Name']),]
names(sorteddata)[names(sorteddata) == outcome1] <- 'Rate'
ranks <- sorteddata[,c('Rate','Hospital.Name')]
ranks$Rank <- c(1:nrow(ranks))
if (num == 'best'){
result <- ranks[1,'Hospital.Name']
} else if (num == 'worst'){
result <- ranks[nrow(ranks),'Hospital.Name']
} else if (num > nrow(ranks)){
result <- 'NA'
} else {
result <- ranks[num,'Hospital.Name']
}
rbind(resdf,c(result,i))
}
resdf
stlist
stdata <- data[which(data$State == 'AL'),]
sorteddata <- stdata[order(stdata[outcome1],stdata['Hospital.Name']),]
names(sorteddata)[names(sorteddata) == outcome1] <- 'Rate'
ranks <- sorteddata[,c('Rate','Hospital.Name')]
ranks$Rank <- c(1:nrow(ranks))
if (num == 'best'){
result <- ranks[1,'Hospital.Name']
} else if (num == 'worst'){
result <- ranks[nrow(ranks),'Hospital.Name']
} else if (num > nrow(ranks)){
result <- 'NA'
} else {
result <- ranks[num,'Hospital.Name']
}
rbind(resdf,c(result,i))
source('best.R')
head(rankall("heart attack", 20), 10)
source('best.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('best.R')
tail(rankall("pneumonia", "worst"), 3)
source('best.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
as.character(subset(r, State == "HI")$Hospital.Name)
subset(r, State == "HI")
r <- rankall("pneumonia", "worst")
subset(r, state == "NJ")
subset(r, State == "NJ")
r <- rankall("heart failure", 10)
subset(r, State == "NV")
setwd("~/Desktop/Coursera Data Science/Data Science Specialization/Reproducible Research/RepData_PeerAssessment1")
fil <- download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip','activity.zip')
unzip('activity.zip')
